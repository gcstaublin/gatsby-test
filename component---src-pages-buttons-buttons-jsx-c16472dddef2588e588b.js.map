{"version":3,"sources":["webpack:///component---src-pages-buttons-buttons-jsx-c16472dddef2588e588b.js","webpack:///./src/pages/buttons/buttons.jsx"],"names":["webpackJsonp","196","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_gatsbyLink","_gatsbyLink2","_examplePageHeader","_examplePageHeader2","_exampleItemComponent","_exampleItemComponent2","ButtonsPage","createElement","pageModified","pageTitle","className","to","text","idLink","title","status"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAoBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAlBvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,GDcKQ,EAAeP,EAAuBM,GCZ3CE,EAAAT,EAAA,IDgBKU,EAAsBT,EAAuBQ,GCflDE,EAAAX,EAAA,IDmBKY,EAAyBX,EAAuBU,GCjB/CE,EAAc,iBAClBP,GAAAF,QAAAU,cAAA,WACER,EAAAF,QAAAU,cAAAJ,EAAAN,SAAmBW,aAAa,kBAAkBC,UAAU,eAC1DV,EAAAF,QAAAU,cAAA,oCAC2B,IACzBR,EAAAF,QAAAU,cAAAN,EAAAJ,SAAMa,UAAU,WAAWC,GAAG,KAA9B,sCAQJZ,EAAAF,QAAAU,cAAAF,EAAAR,SACEe,KAAK,mFACLC,OAAO,mBACPC,MAAM,mBACNC,OAAO,cAJT,WAWAhB,EAAAF,QAAAU,cAAAF,EAAAR,SACEe,KAAK,qLACLC,OAAO,kBACPC,MAAM,kBACNC,OAAO,UAJT,WAWAhB,EAAAF,QAAAU,cAAAF,EAAAR,SACEe,KAAK,mLACLC,OAAO,kBACPC,MAAM,kBACNC,OAAO,UAJT,WAWAhB,EAAAF,QAAAU,cAAAF,EAAAR,SACEe,KAAK,shBACLC,OAAO,eACPC,MAAM,qBACNC,OAAO,UAJT,WASAhB,EAAAF,QAAAU,cAAAF,EAAAR,QAAA,WDiCHL,GAAQK,QC7BMS,ED8Bdf,EAAOC,QAAUA,EAAiB","file":"component---src-pages-buttons-buttons-jsx-c16472dddef2588e588b.js","sourcesContent":["webpackJsonp([217888647757590],{\n\n/***/ 196:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(9);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _examplePageHeader = __webpack_require__(11);\n\t\n\tvar _examplePageHeader2 = _interopRequireDefault(_examplePageHeader);\n\t\n\tvar _exampleItemComponent = __webpack_require__(24);\n\t\n\tvar _exampleItemComponent2 = _interopRequireDefault(_exampleItemComponent);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ButtonsPage = function ButtonsPage() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      _examplePageHeader2.default,\n\t      { pageModified: 'January 1, 1999', pageTitle: 'Buttons, yo' },\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Buttons Learn more about',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { className: 'uni-Link', to: '/' },\n\t          'correct application of  buttons.'\n\t        )\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      {\n\t        text: 'Uniform-UI includes five predefined button styles, each serving its own purpose.',\n\t        idLink: 'standard-buttons',\n\t        title: 'Standard Buttons',\n\t        status: 'deprecated'\n\t      },\n\t      'Removed'\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      {\n\t        text: 'The minimal, text buttons can be used in a variety of conditions, including as a secondary action within a modal (cancelling an action, for example), or as actions within a card.',\n\t        idLink: 'minimal-buttons',\n\t        title: 'Minimal Buttons',\n\t        status: 'stable'\n\t      },\n\t      'Removed'\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      {\n\t        text: 'Uniform UI provides three size variations that are utilized by a modifier class such as `uni-btn--large`. Without any size modifiers, a button is `uni-btn--medium`, by default.',\n\t        idLink: 'size-variations',\n\t        title: 'Size Variations',\n\t        status: 'stable'\n\t      },\n\t      'Removed'\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      {\n\t        text: 'THESE WILL NOT WORK. I DID NOT PULL IN THE ICON COMPONENT. Adding icons to buttons is quite easy. The size of the icon inside the button is relative to the size of the button itself. Also, the color of the icon will automatically be the same color as the color of the text inside the button.The best method of using icons in buttons is with the button component from uniform-ui-components. However, if happened to need to hand code some non-react buttons with icons, reach out to us and we\\'ll offer some potentially useful avenues.',\n\t        idLink: 'icon-buttons',\n\t        title: 'Buttons with Icons',\n\t        status: 'stable'\n\t      },\n\t      'Removed'\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      null,\n\t      ' '\n\t    )\n\t  );\n\t};\n\t\n\texports.default = ButtonsPage;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-buttons-buttons-jsx-c16472dddef2588e588b.js","import React from 'react';\nimport Link from 'gatsby-link';\n\nimport ExamplePageHeader from '../../components/example-page-header/example-page-header';\nimport ExampleComponent from '../../components/example-item-component/example-item-component';\n\nconst ButtonsPage = () => (\n  <div>\n    <ExamplePageHeader pageModified=\"January 1, 1999\" pageTitle=\"Buttons, yo\">\n      <p>\n        Buttons Learn more about{' '}\n        <Link className=\"uni-Link\" to=\"/\">\n          correct application of  buttons.\n        </Link>\n      </p>\n    </ExamplePageHeader>\n\n    {/* Standard Buttons          */}\n    {/* ========================= */}\n    <ExampleComponent\n      text=\"Uniform-UI includes five predefined button styles, each serving its own purpose.\"\n      idLink=\"standard-buttons\"\n      title=\"Standard Buttons\"\n      status=\"deprecated\"\n    >\n      Removed\n    </ExampleComponent>\n\n    {/* Minimal Buttons          */}\n    {/* ========================= */}\n    <ExampleComponent\n      text=\"The minimal, text buttons can be used in a variety of conditions, including as a secondary action within a modal (cancelling an action, for example), or as actions within a card.\"\n      idLink=\"minimal-buttons\"\n      title=\"Minimal Buttons\"\n      status=\"stable\"\n    >\n      Removed\n    </ExampleComponent>\n\n    {/* Minimal Buttons          */}\n    {/* ========================= */}\n    <ExampleComponent\n      text=\"Uniform UI provides three size variations that are utilized by a modifier class such as `uni-btn--large`. Without any size modifiers, a button is `uni-btn--medium`, by default.\"\n      idLink=\"size-variations\"\n      title=\"Size Variations\"\n      status=\"stable\"\n    >\n      Removed\n    </ExampleComponent>\n\n    {/* Icon Buttons          */}\n    {/* ========================= */}\n    <ExampleComponent\n      text=\"THESE WILL NOT WORK. I DID NOT PULL IN THE ICON COMPONENT. Adding icons to buttons is quite easy. The size of the icon inside the button is relative to the size of the button itself. Also, the color of the icon will automatically be the same color as the color of the text inside the button.The best method of using icons in buttons is with the button component from uniform-ui-components. However, if happened to need to hand code some non-react buttons with icons, reach out to us and we'll offer some potentially useful avenues.\"\n      idLink=\"icon-buttons\"\n      title=\"Buttons with Icons\"\n      status=\"stable\"\n    >\n      Removed\n    </ExampleComponent>\n\n    <ExampleComponent> </ExampleComponent>\n  </div>\n);\n\nexport default ButtonsPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/buttons/buttons.jsx"],"sourceRoot":""}