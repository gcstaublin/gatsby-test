{"version":3,"sources":["webpack:///component---src-pages-buttons-buttons-jsx-e5d0bd8cd08cafcdb410.js","webpack:///./src/pages/buttons/buttons.jsx"],"names":["webpackJsonp","197","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_gatsbyLink","_gatsbyLink2","_examplePageHeader","_examplePageHeader2","_exampleItemComponent","_exampleItemComponent2","_hudlUniformUiComponents","ButtonsPage","createElement","pageModified","pageTitle","className","to","text","idLink","title","status","ButtonRow","Button","type","disabled","style","size"],"mappings":"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","file":"component---src-pages-buttons-buttons-jsx-e5d0bd8cd08cafcdb410.js","sourcesContent":["webpackJsonp([217888647757590],{\n\n/***/ 197:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(9);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _examplePageHeader = __webpack_require__(11);\n\t\n\tvar _examplePageHeader2 = _interopRequireDefault(_examplePageHeader);\n\t\n\tvar _exampleItemComponent = __webpack_require__(25);\n\t\n\tvar _exampleItemComponent2 = _interopRequireDefault(_exampleItemComponent);\n\t\n\tvar _hudlUniformUiComponents = __webpack_require__(17);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ButtonsPage = function ButtonsPage() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      _examplePageHeader2.default,\n\t      { pageModified: 'January 1, 1999', pageTitle: 'Buttons, yo' },\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Uniform-UI provides custom button styles for actions in forms, dialogs and any place within Hudl that is submitting information or initiating action. There are a variety of contextual variations, sizes and usages across the spectrum for what you\\u2019ll need to build Hudl. Learn more about',\n\t        ' ',\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { className: 'uni-Link', to: '/' },\n\t          'correct application of Uniform buttons.'\n\t        )\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      {\n\t        text: 'Uniform-UI includes five predefined button styles, each serving its own purpose.',\n\t        idLink: 'standard-buttons',\n\t        title: 'Standard Buttons',\n\t        status: 'deprecated'\n\t      },\n\t      _react2.default.createElement(\n\t        _hudlUniformUiComponents.ButtonRow,\n\t        null,\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { text: 'Button' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'primary', text: 'Primary' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'secondary', text: 'Secondary' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'subtle', text: 'Subtle' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'destroy', text: 'Destroy' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'confirm', text: 'Confirm' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'confirm', text: 'Disabled', disabled: true })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      {\n\t        text: 'The minimal, text buttons can be used in a variety of conditions, including as a secondary action within a modal (cancelling an action, for example), or as actions within a card.',\n\t        idLink: 'minimal-buttons',\n\t        title: 'Minimal Buttons',\n\t        status: 'stable'\n\t      },\n\t      _react2.default.createElement(\n\t        _hudlUniformUiComponents.ButtonRow,\n\t        null,\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { text: 'Button', style: 'minimal' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'primary', text: 'Primary', style: 'minimal' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'secondary', text: 'Secondary', style: 'minimal' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'subtle', text: 'Subtle', style: 'minimal' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'destroy', text: 'Destroy', style: 'minimal' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'confirm', text: 'Confirm', style: 'minimal' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { type: 'confirm', text: 'Disabled', style: 'minimal', disabled: true })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      {\n\t        text: 'Uniform UI provides three size variations that are utilized by a modifier class such as `uni-btn--large`. Without any size modifiers, a button is `uni-btn--medium`, by default.',\n\t        idLink: 'size-variations',\n\t        title: 'Size Variations',\n\t        status: 'stable'\n\t      },\n\t      _react2.default.createElement(\n\t        _hudlUniformUiComponents.ButtonRow,\n\t        null,\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { text: 'Small', size: 'small' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { text: 'Medium', size: 'medium' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { text: 'Large', size: 'large' })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      {\n\t        text: 'THESE WILL NOT WORK. I DID NOT PULL IN THE ICON COMPONENT. Adding icons to buttons is quite easy. The size of the icon inside the button is relative to the size of the button itself. Also, the color of the icon will automatically be the same color as the color of the text inside the button.The best method of using icons in buttons is with the button component from uniform-ui-components. However, if happened to need to hand code some non-react buttons with icons, reach out to us and we\\'ll offer some potentially useful avenues.',\n\t        idLink: 'icon-buttons',\n\t        title: 'Buttons with Icons',\n\t        status: 'stable'\n\t      },\n\t      _react2.default.createElement(\n\t        _hudlUniformUiComponents.ButtonRow,\n\t        null,\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { text: 'Play', size: 'small' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { text: 'Upload', size: 'medium', type: 'primary' }),\n\t        _react2.default.createElement(_hudlUniformUiComponents.Button, { text: 'Exchange', size: 'large', type: 'primary' })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _exampleItemComponent2.default,\n\t      null,\n\t      ' '\n\t    )\n\t  );\n\t};\n\t\n\texports.default = ButtonsPage;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-buttons-buttons-jsx-e5d0bd8cd08cafcdb410.js","import React from 'react';\nimport Link from 'gatsby-link';\n\nimport ExamplePageHeader from '../../components/example-page-header/example-page-header';\nimport ExampleComponent from '../../components/example-item-component/example-item-component';\nimport { Button, ButtonRow } from 'hudl-uniform-ui-components';\n\nconst ButtonsPage = () => (\n  <div>\n    <ExamplePageHeader pageModified=\"January 1, 1999\" pageTitle=\"Buttons, yo\">\n      <p>\n        Uniform-UI provides custom button styles for actions in forms, dialogs and any place within Hudl that is\n        submitting information or initiating action. There are a variety of contextual variations, sizes and usages\n        across the spectrum for what you’ll need to build Hudl. Learn more about{' '}\n        <Link className=\"uni-Link\" to=\"/\">\n          correct application of Uniform buttons.\n        </Link>\n      </p>\n    </ExamplePageHeader>\n\n    {/* Standard Buttons          */}\n    {/* ========================= */}\n    <ExampleComponent\n      text=\"Uniform-UI includes five predefined button styles, each serving its own purpose.\"\n      idLink=\"standard-buttons\"\n      title=\"Standard Buttons\"\n      status=\"deprecated\"\n    >\n      <ButtonRow>\n        <Button text=\"Button\" />\n        <Button type=\"primary\" text=\"Primary\" />\n        <Button type=\"secondary\" text=\"Secondary\" />\n        <Button type=\"subtle\" text=\"Subtle\" />\n        <Button type=\"destroy\" text=\"Destroy\" />\n        <Button type=\"confirm\" text=\"Confirm\" />\n        <Button type=\"confirm\" text=\"Disabled\" disabled />\n      </ButtonRow>\n    </ExampleComponent>\n\n    {/* Minimal Buttons          */}\n    {/* ========================= */}\n    <ExampleComponent\n      text=\"The minimal, text buttons can be used in a variety of conditions, including as a secondary action within a modal (cancelling an action, for example), or as actions within a card.\"\n      idLink=\"minimal-buttons\"\n      title=\"Minimal Buttons\"\n      status=\"stable\"\n    >\n      <ButtonRow>\n        <Button text=\"Button\" style=\"minimal\" />\n        <Button type=\"primary\" text=\"Primary\" style=\"minimal\" />\n        <Button type=\"secondary\" text=\"Secondary\" style=\"minimal\" />\n        <Button type=\"subtle\" text=\"Subtle\" style=\"minimal\" />\n        <Button type=\"destroy\" text=\"Destroy\" style=\"minimal\" />\n        <Button type=\"confirm\" text=\"Confirm\" style=\"minimal\" />\n        <Button type=\"confirm\" text=\"Disabled\" style=\"minimal\" disabled />\n      </ButtonRow>\n    </ExampleComponent>\n\n    {/* Minimal Buttons          */}\n    {/* ========================= */}\n    <ExampleComponent\n      text=\"Uniform UI provides three size variations that are utilized by a modifier class such as `uni-btn--large`. Without any size modifiers, a button is `uni-btn--medium`, by default.\"\n      idLink=\"size-variations\"\n      title=\"Size Variations\"\n      status=\"stable\"\n    >\n      <ButtonRow>\n        <Button text=\"Small\" size=\"small\" />\n        <Button text=\"Medium\" size=\"medium\" />\n        <Button text=\"Large\" size=\"large\" />\n      </ButtonRow>\n    </ExampleComponent>\n\n    {/* Icon Buttons          */}\n    {/* ========================= */}\n    <ExampleComponent\n      text=\"THESE WILL NOT WORK. I DID NOT PULL IN THE ICON COMPONENT. Adding icons to buttons is quite easy. The size of the icon inside the button is relative to the size of the button itself. Also, the color of the icon will automatically be the same color as the color of the text inside the button.The best method of using icons in buttons is with the button component from uniform-ui-components. However, if happened to need to hand code some non-react buttons with icons, reach out to us and we'll offer some potentially useful avenues.\"\n      idLink=\"icon-buttons\"\n      title=\"Buttons with Icons\"\n      status=\"stable\"\n    >\n      <ButtonRow>\n        <Button text=\"Play\" size=\"small\" />\n        <Button text=\"Upload\" size=\"medium\" type=\"primary\" />\n        <Button text=\"Exchange\" size=\"large\" type=\"primary\" />\n      </ButtonRow>\n    </ExampleComponent>\n\n    <ExampleComponent> </ExampleComponent>\n  </div>\n);\n\nexport default ButtonsPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/buttons/buttons.jsx"],"sourceRoot":""}